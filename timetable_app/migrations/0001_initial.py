# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2017-11-22 20:50
from __future__ import unicode_literals

import datetime
from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ClassRoom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter a name for the classroom', max_length=100, unique=True)),
                ('capacity', models.PositiveSmallIntegerField(help_text='Enter a capacity for the classroom')),
                ('type', models.CharField(choices=[('laboratory', 'Laboratory'), ('lecture hall', 'Lecture Hall'), ('departmental class', 'Departmental Class')], help_text='Enter a classroom type e.g lag', max_length=50)),
            ],
            options={
                'db_table': 'ClassRoom',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True)),
                ('title', models.CharField(max_length=100, unique=True)),
                ('unit', models.PositiveSmallIntegerField()),
                ('level', models.PositiveSmallIntegerField(choices=[('100', 100), ('200', 200), ('300', 300), ('400', 400), ('500', 500), ('600', 600)], help_text='Enter a level for the course')),
                ('lecturer_id', models.PositiveSmallIntegerField()),
            ],
            options={
                'db_table': 'Course',
            },
        ),
        migrations.CreateModel(
            name='Day',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('monday', 'Monday'), ('tuesday', 'Tuesday'), ('wednesday', 'Wednesday'), ('thursday', 'Thursday'), ('friday', 'Friday'), ('saturday', 'Saturday'), ('sunday', 'Sunday')], max_length=9, unique=True)),
            ],
            options={
                'db_table': 'Day',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter a valid department name', max_length=100, unique=True)),
            ],
            options={
                'db_table': 'Department',
            },
        ),
        migrations.CreateModel(
            name='FreeTime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('available', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveSmallIntegerField(), size=None)),
                ('day', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='timetable_app.Day')),
                ('lecturer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'FreeTime',
            },
        ),
        migrations.CreateModel(
            name='TimeSlot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.TimeField()),
                ('duration', models.DurationField(default=datetime.timedelta(0, 3600))),
                ('classroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='timetable_app.ClassRoom')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='timetable_app.Course')),
                ('day', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='timetable_app.Day')),
            ],
            options={
                'db_table': 'TimeSlot',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(choices=[('male', 'male'), ('female', 'female'), ('others', 'others')], max_length=6)),
                ('break_time_start', models.TimeField(blank=True, null=True)),
                ('break_time_duration', models.DurationField(blank=True, null=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='timetable_app.Department')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'UserProfile',
            },
        ),
        migrations.AddField(
            model_name='course',
            name='department',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='timetable_app.Department'),
        ),
        migrations.AddField(
            model_name='classroom',
            name='department',
            field=models.ForeignKey(help_text='Select an existing department', on_delete=django.db.models.deletion.CASCADE, to='timetable_app.Department'),
        ),
    ]
